" vim: set sw=4 ts=4 sts=4 et tw=78 foldmarker={,} foldlevel=0 foldmethod=marker spell:

" Environment 
" {
    " Add an UnBundle command 
    " {
        function! UnBundle(arg, ...)
          let bundle = vundle#config#init_bundle(a:arg, a:000)
          call filter(g:bundles, 'v:val["name_spec"] != "' . a:arg . '"')
        endfunction

        com! -nargs=+         UnBundle
        \ call UnBundle(<args>)
    " }
" }


" Deps
" {
    Bundle 'gmarik/vundle'
    Bundle 'MarcWeber/vim-addon-mw-utils'
    Bundle 'tomtom/tlib_vim'
    if executable('ag')
        Bundle 'mileszs/ack.vim'
        let g:ackprg = 'ag --nogroup --nocolor --column --smart-case'
    elseif executable('ack-grep')
        let g:ackprg="ack-grep -H --nocolor --nogroup --column"
        Bundle 'mileszs/ack.vim'
    elseif executable('ack')
        Bundle 'mileszs/ack.vim'
    endif
" }

" General
" {
function! s:BundlesForGeneral()
    Bundle 'tpope/vim-fugitive'
    Bundle 'Lokaltog/vim-easymotion'
    Bundle 'kien/ctrlp.vim'
    Bundle 'bling/vim-bufferline'
    Bundle 'bling/vim-airline'
endfunc
" }

" Programming
" {
function! s:BundlesForProgramming()
    Bundle 'godlygeek/tabular'
endfunc
" }

" Misc
" {
if IsBundled('vundle')
    " 如果语言是中文,则自动添加 vimcdoc
    if v:lang =~ 'zh'
        Bundle 'wenerme/vimcdoc'
    endif
endif
" }

" 加载使用环境
function! BundlesFor(n)
    let l:fn = 's:BundlesFor'.a:n
    if exists('*'.l:fn)
        call {l:fn}()
        return 1
    endif

    let l:fn = expand('~/.vim/.vimrc.bundles.'.a:n)
    if filereadable(l:fn)
        exec 'source '.l:fn
        return 1
    endif

    echo 'Bundles '.a:n.' not found.'
    return 0
endfunc

" Load local bundles
call TrySource("~/.vim/.vimrc.bundles.local")

" Load needed bundles
if exists('g:option_with_bundles')
    for s:n in g:option_with_bundles
        call BundlesFor(s:n)
    endfor
endif
